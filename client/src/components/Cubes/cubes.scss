@import '../../styles/_colors.scss';

$animation-length: 800ms;
$animation-easing: ease;
$animation-delay: 800ms;

.cubes {
  position: fixed;
  pointer-events: none;

  &--home-big-cube {
    bottom: 238px;
    left: -130px;
    transform: scale(0.72);
  }

  &--home-small-cube {
    left: 30%;
    top: -80px;
    transform: scale(0.88);

    @keyframes tror {
      to { transform-origin: 80% -58%; }
    }

    .cube .face.front.face--scale-small {
       transform-origin: 0 0;
      animation:
        tror $animation-length $animation-easing $animation-delay forwards,
        cubeScale ($animation-length) $animation-easing $animation-delay forwards;
    }

    .cube__col-1-row-1-cube-1-side-1 .face__image {
      max-width: 51%;
    }
  }

  &--home-smallest-cube {
    left: -30px;
    top: 120px;
    z-index: 1;
    transform: scale(0.6);

    .cube__col-0-row-0-cube-1-side-1 .face__image {
      width: 100%;
    }
  }

  &--home-bg-cube-left {
    left: -315px;
    top: -135px;
    transform: scale(2.8);

    .cube__col-0-row-0-cube-0-side-1,
    .cube__col-0-row-0-cube-0-side-2 { opacity: 0; }

    .cube .face.front.cube__col-0-row-0-cube-0-side-0 {
      background: map-get($colors, lightest-blue);
      opacity: 0.6;
    }
  }

  &--home-bg-cube-right {
    top: -580px;
    right: 390px;
    transform: scale(2);
  }

  &--home-bg-cube-bottom-right {
    top: -200px;
    right: 1480px;
    transform: scale(4);

    .cube .face.front.cube__col-1-row-0-cube-1-side-0 {
      background: map-get($colors, lightest-blue)
    }

    .cube .face.top.cube__col-1-row-1-cube-0-side-2 {
      $r: 210deg;
      $sk: 30deg;
      $sc: 0.564;
      background: map-get($colors, light-blue);
      transform: rotate($r) skew(-$sk) translate(-200px, -60px) scale($sc);
      transform-origin: 14px -15px;
    }
  }

  &__column {
    position: absolute;

    &:first-child { z-index: 1; }

    $tx: 86px;
    $ty: 49px;
    @for $i from 0 through 2 {
      $n: $i + 2;
      &:nth-child(#{$n}) {
        z-index: $n;
        transform: translate($tx + $tx * $i, $ty + $ty * $i);
      }
    }
  }

  &__row {
    display: flex;
    justify-content: center;
    position: relative;
    transform-origin: 0 0;

    $b: 4;
    $ty: -74px;
    &:first-child { z-index: $b; }
    @for $i from 0 through 2 {
      &:nth-child(#{$i + 2}) {
        z-index: $b - ($i + 1);
        transform: translateY($ty + $ty * $i);
      }
    }
  }
}

.cube {
  $w: 172px;
  $h: 172px;
  width: $w;
  height: $h;
  position: relative;

  $b: 4;
  $tx: -87px;
  $ty: -48px;
  &:first-child { z-index: $b; }
  @for $i from 0 through 2 {
    &:nth-child(#{$i + 2}) {
      z-index: $b - ($i + 1);
      transform: translate($tx + $tx * $i, $ty + $ty * $i);
    }
  }

  .face {
    transform-origin: 0 0;
    position: absolute;
    width: 100px;
    height: 100px;

    &.face--transparent {
      opacity: 0;
      // opacity: 1;
      // animation: disappear $animation-length $animation-easing $animation-delay forwards;
    }

    &.face--img {
      overflow: hidden;
    }

    &.front {
      $r: 30deg;
      $sk: $r;
      $sc: 0.864;
      transform: rotate(-$r) skewX(-$sk) translate(130px, 172px) scaleY($sc);
      background: map-get($colors, darkest-blue);

      .face__image-container {
        transform: scaleY(1 / $sc) skewX($sk) rotate($r);
      }

      @keyframes cubeScale {
        to {
          transform: rotate(-$r) skewX(-$sk) translate(130px, 172px) scale(0.2);
        }
      }

      &.face--scale-small {
        animation: cubeScale $animation-length $animation-easing $animation-delay forwards;
      }
    }

    &.top {
      $r: 210deg;
      $sk: 30deg;
      $sc: 0.864;
      transform: rotate($r) skew(-$sk) translate(-200px, -60px) scaleY($sc);
      background: map-get($colors, blue);

      .face__image-container {
        transform: scaleY(1 / $sc) skew($sk) rotate(-$r);
      }
    }

    &.side {
      $r: 90deg;
      $sk: 30deg;
      $sc: 0.864;
      transform: rotate($r) skewX(-$sk) scaleY($sc) translate(68px, -131px);
      background: map-get($colors, dark-blue);

      .face__image-container {
        transform: scaleY(1 / $sc) skew($sk) rotate(-$r);
      }
    }
    &__image-container {
      width: 200%;
      height: 200%;
      display: flex;
      align-items: center;
      justify-content: center;
      position: absolute;
      top: -50%;
      left: -50%;
      z-index: -1;
    }

    &__image {
      max-width: 84%;
    }
  }
}

@keyframes disappear {
  to { opacity: 0}
}
